let Router,helloController,userController,messageController;_db0‍.x([["default",()=>_db0‍.o]]);_db0‍.w("express",[["Router",["Router"],function(v){Router=v}]]);_db0‍.w("./controllers/helloController",[["default",["helloController"],function(v){helloController=v}]]);_db0‍.w("./controllers/userController",[["default",["userController"],function(v){userController=v}]]);_db0‍.w("./controllers/messageController",[["default",["messageController"],function(v){messageController=v}]]);






const api = () => {
    const routes = Router();
    routes.get('/', helloController.hello);
    routes.get('/templatedPage', helloController.templatedPage);
    
    routes.get('/user', userController.getUser);
    routes.post('/user', userController.postUser);
    routes.put('/user', userController.putUser);
    routes.delete('/user', userController.deleteUser);

    routes.get('/user/:userId',userController.getUserId);
    routes.post('/user/:userId',userController.postUserId);
    routes.put('/user/:userId',userController.putUserId);
    routes.delete('/user/:userId',userController.deleteUserId);

    routes.get('/meteo/:city', helloController.getMeteo);

    routes.get('/users', userController.getUsers);

    routes.get('/user/:userId/messages', messageController.getUserMessages);
    routes.put('/user/:userId/messages', messageController.putUserMessages);
    routes.delete('/messages/:msgId',messageController.deleteUserMessages);


    return routes;
};



_db0‍.d(api);
